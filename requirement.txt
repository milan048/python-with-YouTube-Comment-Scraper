1Ô∏è‚É£ requirements.txt file (for your project)

Create a file named requirements.txt in your project folder and paste this inside:

streamlit
google-api-python-client
textblob
matplotlib
wordcloud
pandas


üëâ Then anyone (including you) can install all dependencies with:

pip install -r requirements.txt

2Ô∏è‚É£ Start of Documentation ‚Äì SRS (Software Requirement Specification)

Here‚Äôs a ready draft of your SRS:

üìÑ Software Requirement Specification (SRS)

Project Title: YouTube Analytics & Sentiment Analysis Dashboard
Platform: Python + Streamlit

1. Introduction

This project is a web-based dashboard built using Streamlit that allows users to analyze YouTube channel data and perform sentiment analysis on video comments. The system integrates the YouTube Data API v3 for fetching video/channel statistics and uses TextBlob for sentiment analysis.

2. Purpose

To analyze YouTube video/channel performance.

To extract insights from comments through sentiment analysis.

To visualize statistics with graphs and word clouds.

To provide an easy-to-use interface for content creators, researchers, and educators.

3. Scope

The system will:

Allow user to enter a YouTube Channel ID or Video ID.

Fetch and display video details (views, likes, comments, etc.).

Perform sentiment analysis (Positive/Negative/Neutral).

Generate data visualizations (bar chart, pie chart, word cloud).

Provide insights in real-time via a Streamlit web app.

4. Functional Requirements

FR1: User can input YouTube Channel ID or Video ID.

FR2: System fetches video statistics from YouTube API.

FR3: System performs sentiment analysis on video comments.

FR4: Results are displayed in tables and charts.

FR5: Word cloud is generated from comments.

FR6: Option to download results (CSV/Excel).

5. Non-Functional Requirements

NFR1: The system must be easy to use (Streamlit UI).

NFR2: Response time for fetching data should be < 5 seconds (depending on API).

NFR3: The system must work on Windows/Linux/Mac.

NFR4: Data should be displayed in real-time.

6. Hardware Requirements

Minimum: i3 processor, 4GB RAM, 2GB storage.

Recommended: i5 processor, 8GB RAM, SSD.

7. Software Requirements

Python 3.8+

Libraries: Streamlit, Google API client, TextBlob, Matplotlib, WordCloud, Pandas

Browser: Chrome/Firefox

API Key: YouTube Data API v3